-- CREATE TABLE modules (
--   StudentID varchar(32) NOT NULL,
--   CourseID varchar(32) NOT NULL,
--   Course varchar(255) NOT NULL,
--   Title varchar(255) NOT NULL,
--   Details TEXT NOT NULL,
--   Attachments TEXT DEFAULT NULL,
--   Difficulty real NOT NULL DEFAULT 3,
--   Time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID serial,
--   PRIMARY KEY (ID)
-- );


-- DROP TABLE IF EXISTS speech_lessons;
-- DROP TABLE IF EXISTS speech_modules;
-- DROP TABLE IF EXISTS speech_drills;
-- DROP TABLE IF EXISTS speech_practices;

-- CREATE TABLE speech_modules(
--   Name varchar(255) NOT NULL,
--   Timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID)
-- );
-- CREATE TABLE speech_lessons(
--   ModuleID varchar(32) NOT NULL,
--   Name varchar(255) NOT NULL,
--   LessonFile varchar(255) NOT NULL,
--   QuizFile varchar(255) NOT NULL,
--   LessonType varchar(100) NOT NULL,
--   Timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID),
--   FOREIGN KEY (ModuleID) REFERENCES speech_modules(ID) ON DELETE CASCADE
-- );

-- CREATE TABLE speech_practices(
--   Name varchar(255) NOT NULL,
--   Timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID)
-- );
-- CREATE TABLE speech_drills(
--   PracticeID varchar(32) NOT NULL,
--   Name varchar(255) NOT NULL,
--   DrillFile varchar(255) NOT NULL,
--   AudioFile varchar(255) NOT NULL,
--   Timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID),
--   FOREIGN KEY (PracticeID) REFERENCES speech_practices(ID) ON DELETE CASCADE
-- );

-- CREATE TABLE lab_meetings (
--   LabID int NOT NULL,
--   TeacherID varchar(32) NOT NULL,
--   MeetingCode varchar(100) NOT NULL,
--   Participants real NOT NULL DEFAULT 1,
--   StartTime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   EndTime timestamp DEFAULT NULL,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID),
--   FOREIGN KEY (TeacherID) REFERENCES teachers(ID) ON DELETE CASCADE,
--   FOREIGN KEY (LabID) REFERENCES speech_labs(ID) ON DELETE CASCADE
-- );

-- DROP TABLE IF EXISTS speech_quizzes;

-- CREATE TABLE speech_quizzes(
--   LessonID varchar(32) NOT NULL,
--   StudentID varchar(32) NOT NULL,
--   TakenPoints real NOT NULL,
--   TotalPoints real NOT NULL DEFAULT 10,
--   Timestamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID serial NOT NULL,
--   PRIMARY KEY (ID),
--   FOREIGN KEY (StudentID) REFERENCES students(ID) ON DELETE CASCADE,
--   FOREIGN KEY (LessonID) REFERENCES speech_lessons(ID) ON DELETE CASCADE
-- );

-- CREATE TABLE meetings (
--   ClassID int NOT NULL,
--   TeacherID varchar(32) NOT NULL,
--   MeetingCode varchar(100) NOT NULL,
--   Participants real NOT NULL DEFAULT 1,
--   StartTime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   EndTime timestamp DEFAULT NULL,
--   ID varchar(32) NOT NULL,
--   PRIMARY KEY (ID),
--   FOREIGN KEY (TeacherID) REFERENCES teachers(ID) ON DELETE CASCADE,
--   FOREIGN KEY (ClassID) REFERENCES classes(ID) ON DELETE CASCADE
-- );

-- CREATE TABLE verification (
--   Email varchar(255) NOT NULL, 
--   FirstName varchar(255) NOT NULL, 
--   LastName varchar(255) NOT NULL, 
--   Token varchar(255) NOT NULL, 
--   PRIMARY KEY (Email)
-- );

-- CREATE TABLE speech_attendance (
--   StudentID varchar(32) NOT NULL, 
--   MeetingID varchar(32) NOT NULL,
--   TimeIn timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
--   ID serial NOT NULL,
--   FOREIGN KEY (StudentID) REFERENCES students(ID) ON DELETE CASCADE,
--   FOREIGN KEY (MeetingID) REFERENCES lab_meetings(ID) ON DELETE CASCADE,
--   PRIMARY KEY (ID)
-- );
